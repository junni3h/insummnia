[{"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\index.js":"1","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\reportWebVitals.js":"2","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\App.js":"3","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\UserListViewPage.jsx":"4","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\main\\MainViewPage.jsx":"5","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\UserRegistViewPage.jsx":"6","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\common\\MenuLayout.jsx":"7","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\main\\UserLoginViewPage.jsx":"8","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\router\\libs\\UserAPIRoute.js":"9","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\UserInfoViewPage.jsx":"10","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\RootReducer.js":"11","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\user\\reducer\\UserReducer.js":"12","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\RootActions.js":"13","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\user\\action\\UserReducerAction.js":"14"},{"size":411,"mtime":1611281116219,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1611033689207,"results":"17","hashOfConfig":"16"},{"size":1004,"mtime":1611219308886,"results":"18","hashOfConfig":"16"},{"size":3046,"mtime":1611132742858,"results":"19","hashOfConfig":"16"},{"size":94,"mtime":1611045001934,"results":"20","hashOfConfig":"16"},{"size":4048,"mtime":1611281737423,"results":"21","hashOfConfig":"16"},{"size":5178,"mtime":1611281968721,"results":"22","hashOfConfig":"16"},{"size":3243,"mtime":1611281626353,"results":"23","hashOfConfig":"16"},{"size":711,"mtime":1611217595463,"results":"24","hashOfConfig":"16"},{"size":9257,"mtime":1611134609435,"results":"25","hashOfConfig":"16"},{"size":207,"mtime":1611277915237,"results":"26","hashOfConfig":"16"},{"size":649,"mtime":1611281754168,"results":"27","hashOfConfig":"16"},{"size":147,"mtime":1611278191813,"results":"28","hashOfConfig":"16"},{"size":307,"mtime":1611281906731,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1041kao",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\index.js",[],"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\reportWebVitals.js",[],["61","62"],"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\App.js",[],["63","64"],"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\UserListViewPage.jsx",[],"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\main\\MainViewPage.jsx",[],"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\UserRegistViewPage.jsx",[],"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\common\\MenuLayout.jsx",["65","66"],"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\main\\UserLoginViewPage.jsx",["67"],"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\router\\libs\\UserAPIRoute.js",[],"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\UserInfoViewPage.jsx",["68","69","70"],"import { React, useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport UserAPIRoute from '../../router/libs/UserAPIRoute';\r\n\r\nimport { Button, Container, TextField } from '@material-ui/core';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport BackspaceRoundedIcon from '@material-ui/icons/BackspaceRounded';\r\nimport UpdateRoundedIcon from '@material-ui/icons/UpdateRounded';\r\nimport DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\n\r\nimport '../../css/common/common.css';\r\n\r\nexport default function UserInfoViewPage(props) {\r\n\r\n    const { userId } = props.match.params;\r\n    const [ user, setUser ] = useState({});\r\n\r\n    const [ isUpdate, setIsUpdate ] = useState(false);\r\n\r\n    async function fetchData(){\r\n        const result = await UserAPIRoute.fetchUserInfo(userId);\r\n        const data = result.data;\r\n\r\n        setUser(result.data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    },[]);\r\n\r\n    const handleIsUpdate = (event) =>\r\n    {\r\n        if(isUpdate){\r\n            setIsUpdate(false);\r\n        } else {\r\n            setIsUpdate(true);\r\n        }\r\n        \r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n\r\n        const target = event.target;\r\n        const value  = target.value;\r\n        const name   = target.name;\r\n\r\n        setUser(\r\n            {   \r\n                ...user\r\n              , [name]: value\r\n            }\r\n        );\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        const params = user;\r\n        console.log(\"submit==>\", params);\r\n\r\n        UserAPIRoute.fetchUpdateUsers(params)\r\n                    .then( res => {\r\n                        const data = res.data;\r\n\r\n                        if(data.update){\r\n                            if(window.confirm(data.message)){\r\n                                setIsUpdate(false);\r\n                                fetchData();\r\n                            }\r\n                        } else {\r\n                            alert(data.message);\r\n                        }\r\n                    });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    if(isUpdate) {\r\n        return(\r\n            <Container className=\"container\" component=\"main\" maxWidth=\"lg\" color=\"inherit\">\r\n    \r\n                <div className=\"btnRightField\">\r\n                    <Link to=\"/admin/user/list\" className=\"textLink\">\r\n                        <Button className=\"btnRight\" variant=\"contained\" color=\"inherit\" size=\"small\" startIcon={<BackspaceRoundedIcon />}>목록</Button>\r\n                    </Link>\r\n                    <Button className=\"btnRight\" variant=\"contained\" color=\"secondary\" size=\"small\" onClick={handleIsUpdate} startIcon={<CancelRoundedIcon />}>취소</Button>\r\n                    <Button className=\"btnRight\" variant=\"contained\" color=\"secondary\" size=\"small\" startIcon={<DeleteForeverRoundedIcon />}>삭제</Button>\r\n                </div>\r\n                <form onSubmit={handleSubmit} method=\"post\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TableContainer>\r\n                                <Table id=\"table\" size=\"small\">\r\n                                    <TableHead className=\"tableHeader\">\r\n                                        <TableCell>아이디</TableCell>\r\n                                        <TableCell>{user.userId}</TableCell>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell>이름</TableCell>\r\n                                            <TableCell><TextField id=\"userNm\" name=\"userNm\" value={user.userNm} onChange={handleChange} size=\"small\"></TextField></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>비밀번호</TableCell>\r\n                                            <TableCell><TextField type=\"password\" id=\"password\" name=\"password\" value={user.password} onChange={handleChange} size=\"small\" required></TextField></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>별명</TableCell>\r\n                                            <TableCell><TextField id=\"nickNm\" name=\"nickNm\" value={user.nickNm} onChange={handleChange} size=\"small\"></TextField></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>등록일</TableCell>\r\n                                            <TableCell>{user.createDatetime}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>수정자</TableCell>\r\n                                            <TableCell>{user.updateUserId}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>수정일</TableCell>\r\n                                            <TableCell>{user.updateDatetime}</TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </Grid>\r\n                \r\n                    <div className=\"btnRightField\">\r\n                        <Button  type=\"submit\" className=\"btnRight\" variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<CheckCircleRoundedIcon />}>수정</Button>\r\n                    </div>\r\n                </form>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return(\r\n            <Container className=\"container\" component=\"main\" maxWidth=\"lg\" color=\"inherit\">\r\n    \r\n                <div className=\"btnRightField\">\r\n                    <Link to=\"/admin/user/list\" className=\"textLink\">\r\n                        <Button className=\"btnRight\" variant=\"contained\" color=\"inherit\" size=\"small\" startIcon={<BackspaceRoundedIcon />}>목록</Button>\r\n                    </Link>\r\n                    <Button className=\"btnRight\" variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleIsUpdate} startIcon={<UpdateRoundedIcon />}>수정</Button>\r\n                    <Button className=\"btnRight\" variant=\"contained\" color=\"secondary\" size=\"small\" startIcon={<DeleteForeverRoundedIcon />}>삭제</Button>\r\n                </div>\r\n                \r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TableContainer>\r\n                            <Table id=\"table\" size=\"small\">\r\n                                <TableHead className=\"tableHeader\">\r\n                                    <TableCell>아이디</TableCell>\r\n                                    <TableCell>{user.userId}</TableCell>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell>이름</TableCell>\r\n                                        <TableCell>{user.userNm}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>별명</TableCell>\r\n                                        <TableCell>{user.nickNm}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>등록일</TableCell>\r\n                                        <TableCell>{user.createDatetime}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>수정자</TableCell>\r\n                                        <TableCell>{user.updateUserId}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>수정일</TableCell>\r\n                                        <TableCell>{user.updateDatetime}</TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n}","C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\RootReducer.js",[],"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\user\\reducer\\UserReducer.js",[],"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\RootActions.js",[],"C:\\pjt\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\user\\action\\UserReducerAction.js",["71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":108,"column":17,"nodeType":"84","endLine":108,"endColumn":69},{"ruleId":"85","severity":1,"message":"86","line":82,"column":147,"nodeType":"87","endLine":82,"endColumn":165},{"ruleId":"78","severity":1,"message":"88","line":2,"column":16,"nodeType":"80","messageId":"81","endLine":2,"endColumn":24},{"ruleId":"78","severity":1,"message":"89","line":33,"column":15,"nodeType":"80","messageId":"81","endLine":33,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":40,"column":7,"nodeType":"92","endLine":40,"endColumn":9,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":19,"column":1,"nodeType":"96","endLine":23,"endColumn":3},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Redirect' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["99"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [fetchData]",{"range":"102","text":"103"},[1446,1448],"[fetchData]"]