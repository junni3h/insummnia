[{"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\index.js":"1","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\App.js":"2","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\RootReducer.js":"3","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\user\\reducer\\UserReducer.js":"4","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\main\\MainViewPage.jsx":"5","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\common\\MenuLayout.jsx":"6","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\main\\UserLoginViewPage.jsx":"7","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\UserRegistViewPage.jsx":"8","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\UserInfoViewPage.jsx":"9","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\UserListViewPage.jsx":"10","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\error\\NotFoundErrorPage.jsx":"11","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\error\\AccessErrorPage.jsx":"12","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\error\\AuthoriziedErrorPage.jsx":"13","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\RootActions.js":"14","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\router\\libs\\UserAPIRoute.js":"15","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\user\\action\\UserReducerAction.js":"16","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\admin\\MenuMgmtViewPage.jsx":"17","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\router\\libs\\MainAPIRoute.js":"18","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\menu\\action\\MenuReducerAction.js":"19","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\menu\\reducer\\MenuReducer.js":"20","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\MyInfoViewPage.jsx":"21","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\router\\libs\\MenuAPIRoute.js":"22"},{"size":411,"mtime":1611714330092,"results":"23","hashOfConfig":"24"},{"size":1671,"mtime":1611734733655,"results":"25","hashOfConfig":"24"},{"size":291,"mtime":1611637329108,"results":"26","hashOfConfig":"24"},{"size":800,"mtime":1611712746108,"results":"27","hashOfConfig":"24"},{"size":908,"mtime":1611726767731,"results":"28","hashOfConfig":"24"},{"size":9027,"mtime":1611734860423,"results":"29","hashOfConfig":"24"},{"size":5572,"mtime":1611727338056,"results":"30","hashOfConfig":"24"},{"size":6514,"mtime":1611727943943,"results":"31","hashOfConfig":"24"},{"size":10422,"mtime":1611709449518,"results":"32","hashOfConfig":"24"},{"size":3700,"mtime":1611738638622,"results":"33","hashOfConfig":"24"},{"size":394,"mtime":1611296139128,"results":"34","hashOfConfig":"24"},{"size":391,"mtime":1611296139127,"results":"35","hashOfConfig":"24"},{"size":921,"mtime":1611296139128,"results":"36","hashOfConfig":"24"},{"size":240,"mtime":1611711662686,"results":"37","hashOfConfig":"24"},{"size":787,"mtime":1611560749568,"results":"38","hashOfConfig":"24"},{"size":327,"mtime":1611650894874,"results":"39","hashOfConfig":"24"},{"size":731,"mtime":1611633289508,"results":"40","hashOfConfig":"24"},{"size":216,"mtime":1611729126495,"results":"41","hashOfConfig":"24"},{"size":121,"mtime":1611637819543,"results":"42","hashOfConfig":"24"},{"size":349,"mtime":1611712749733,"results":"43","hashOfConfig":"24"},{"size":10113,"mtime":1611728811128,"results":"44","hashOfConfig":"24"},{"size":302,"mtime":1611729942988,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"homc1r",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\index.js",[],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\App.js",[],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\RootReducer.js",[],["97","98"],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\user\\reducer\\UserReducer.js",[],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\main\\MainViewPage.jsx",["99","100","101","102","103","104","105","106","107","108","109","110","111"],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\common\\MenuLayout.jsx",["112","113"],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\main\\UserLoginViewPage.jsx",[],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\UserRegistViewPage.jsx",["114","115"],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\UserInfoViewPage.jsx",["116","117","118"],"import { React, useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport UserAPIRoute from '../../router/libs/UserAPIRoute';\r\n\r\nimport { Button, Container, TextField } from '@material-ui/core';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport BackspaceRoundedIcon from '@material-ui/icons/BackspaceRounded';\r\nimport UpdateRoundedIcon from '@material-ui/icons/UpdateRounded';\r\nimport DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\n\r\nimport '../../css/common/common.css';\r\n\r\nexport default function UserInfoViewPage(props) {\r\n\r\n    const login = useSelector(state => state.UserReducer);\r\n\r\n    const { userId } = props.match.params;\r\n    const [ user, setUser ] = useState({});\r\n\r\n    const [ isUpdate, setIsUpdate ] = useState(false);\r\n\r\n    async function fetchData(){\r\n        const result = await UserAPIRoute.fetchUserInfo(userId);\r\n        const data = result.data;\r\n\r\n        setUser(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    },[]);\r\n\r\n    const handleIsUpdate = (event) =>\r\n    {\r\n        if(isUpdate){\r\n            setIsUpdate(false);\r\n        } else {\r\n            setIsUpdate(true);\r\n        }\r\n        \r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n\r\n        const target = event.target;\r\n        const value  = target.value;\r\n        const name   = target.name;\r\n\r\n        setUser(\r\n            {   \r\n                ...user\r\n              , [name]: value\r\n            }\r\n        );\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        const params = user;\r\n        console.log(\"submit==>\", params);\r\n\r\n        UserAPIRoute.fetchUpdateUsers(params)\r\n                    .then( res => {\r\n                        const data = res.data;\r\n\r\n                        if(data.update){\r\n                            if(window.confirm(data.message)){\r\n                                setIsUpdate(false);\r\n                                fetchData();\r\n                            }\r\n                        } else {\r\n                            alert(data.message);\r\n                        }\r\n                    });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    if(isUpdate) {\r\n        return(\r\n            <Container className=\"container\" component=\"main\" maxWidth=\"lg\" color=\"inherit\">\r\n    \r\n                <div className=\"btnRightField\">\r\n                    <Link to=\"/admin/user/list\" className=\"textLink\">\r\n                        <Button className=\"btnRight\" variant=\"contained\" color=\"inherit\" size=\"small\" startIcon={<BackspaceRoundedIcon />}>목록</Button>\r\n                    </Link>\r\n                    <Button className=\"btnRight\" variant=\"contained\" color=\"secondary\" size=\"small\" onClick={handleIsUpdate} startIcon={<CancelRoundedIcon />}>취소</Button>\r\n                    <Button className=\"btnRight\" variant=\"contained\" color=\"secondary\" size=\"small\" startIcon={<DeleteForeverRoundedIcon />}>삭제</Button>\r\n                </div>\r\n                <form onSubmit={handleSubmit} method=\"post\">\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TableContainer>\r\n                                <Table id=\"table\" size=\"small\">\r\n                                    <TableHead className=\"tableHeader\">\r\n                                        <TableCell>아이디</TableCell>\r\n                                        <TableCell>{user.userId}</TableCell>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell>이름</TableCell>\r\n                                            <TableCell><TextField id=\"userNm\" name=\"userNm\" value={user.userNm} onChange={handleChange} size=\"small\"></TextField></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>비밀번호</TableCell>\r\n                                            <TableCell><TextField type=\"password\" id=\"password\" name=\"password\" value={user.password} onChange={handleChange} size=\"small\" required></TextField></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>별명</TableCell>\r\n                                            <TableCell><TextField id=\"nickNm\" name=\"nickNm\" value={user.nickNm} onChange={handleChange} size=\"small\"></TextField></TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>권한</TableCell>\r\n                                            <TableCell>{user.roleNm}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>등록일시</TableCell>\r\n                                            <TableCell>{user.recentLoginDatetime}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>접속일시</TableCell>\r\n                                            <TableCell>{user.createDatetime}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>수정자</TableCell>\r\n                                            <TableCell>{user.updateUserId}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>수정일시</TableCell>\r\n                                            <TableCell>{user.updateDatetime}</TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </Grid>\r\n                \r\n                    <div className=\"btnRightField\">\r\n                        <Button  type=\"submit\" className=\"btnRight\" variant=\"contained\" color=\"primary\" size=\"small\" startIcon={<CheckCircleRoundedIcon />}>수정</Button>\r\n                    </div>\r\n                </form>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return(\r\n            <Container className=\"container\" component=\"main\" maxWidth=\"lg\" color=\"inherit\">\r\n    \r\n                <div className=\"btnRightField\">\r\n                    <Link to=\"/admin/user/list\" className=\"textLink\">\r\n                        <Button className=\"btnRight\" variant=\"contained\" color=\"inherit\" size=\"small\" startIcon={<BackspaceRoundedIcon />}>목록</Button>\r\n                    </Link>\r\n                    <Button className=\"btnRight\" variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleIsUpdate} startIcon={<UpdateRoundedIcon />}>수정</Button>\r\n                    <Button className=\"btnRight\" variant=\"contained\" color=\"secondary\" size=\"small\" startIcon={<DeleteForeverRoundedIcon />}>삭제</Button>\r\n                </div>\r\n                \r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TableContainer>\r\n                            <Table id=\"table\" size=\"small\">\r\n                                <TableHead className=\"tableHeader\">\r\n                                    <TableCell>아이디</TableCell>\r\n                                    <TableCell>{user.userId}</TableCell>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell>이름</TableCell>\r\n                                        <TableCell>{user.userNm}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>별명</TableCell>\r\n                                        <TableCell>{user.nickNm}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>권한</TableCell>\r\n                                        <TableCell>{user.roleNm}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>등록일시</TableCell>\r\n                                        <TableCell>{user.createDatetime}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>접속일시</TableCell>\r\n                                        <TableCell>{user.recentLoginDatetime}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>수정자</TableCell>\r\n                                        <TableCell>{user.updateUserId}</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>수정일시</TableCell>\r\n                                        <TableCell>{user.updateDatetime}</TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n}","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\UserListViewPage.jsx",["119"],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\error\\NotFoundErrorPage.jsx",["120"],"import {Button, Container, Divider} from '@material-ui/core';\r\nimport PanToolRoundedIcon from '@material-ui/icons/PanToolRounded';\r\n\r\nexport default function NotFoundErrorPage() {\r\n    return (\r\n        <Container className=\"bodyContainer\" component=\"main\" maxWidth=\"xs\">\r\n            <PanToolRoundedIcon/>\r\n            <Divider/>\r\n            <p>NOT FOUND!!</p>\r\n        </Container>\r\n    )\r\n}","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\error\\AccessErrorPage.jsx",[],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\error\\AuthoriziedErrorPage.jsx",["121"],"import {Link} from 'react-router-dom';\r\nimport {Button, Container, Divider} from '@material-ui/core';\r\nimport PanToolRoundedIcon from '@material-ui/icons/PanToolRounded';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\n\r\nexport default function AuthoriziedErrorPage() {\r\n    return (\r\n        <Container className=\"bodyContainer\" component=\"main\" maxWidth=\"xs\">\r\n            <PanToolRoundedIcon/>\r\n            <Divider/>\r\n            <p>PLEASE LOGIN .... </p>\r\n            <div className=\"buttonField\">\r\n                <Link to=\"/login\" className=\"textLink\">\r\n                    <Button type=\"button\" className=\"btnVertical\" variant=\"contained\" color=\"primary\" className=\"regist\" margin=\"normal\" startIcon={<PersonRoundedIcon fontSize=\"small\"/>} fullWidth>\r\n                        로그인\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        </Container>\r\n    )\r\n}","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\RootActions.js",[],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\router\\libs\\UserAPIRoute.js",[],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\user\\action\\UserReducerAction.js",["122"],"const regist = () => {\r\n    return {\r\n        type: 'USER_REGIST'\r\n    };\r\n};\r\n\r\nconst login = data => {\r\n    return {\r\n          type: 'USER_LOGIN'\r\n        , data\r\n    };\r\n};\r\n\r\nconst logout = () => {\r\n    return {\r\n        type: 'USER_LOGOUT'\r\n    }\r\n}\r\n\r\nexport default { \r\n        regist\r\n    ,   login\r\n    ,   logout\r\n};","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\admin\\MenuMgmtViewPage.jsx",["123"],"import {React} from 'react';\r\n\r\nimport { Container } from '@material-ui/core';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\nexport default function MenuMgmtViewPage() {\r\n    \r\n    return (\r\n        <Container className=\"container\" component=\"main\" maxWidth=\"lg\" color=\"inherit\">\r\n            <TreeView className=\"tree\" \r\n                      defaultCollapseIcon={<ExpandMoreIcon />}\r\n                      defaultExpandIcon={<ChevronRightIcon />}\r\n                      multiSelect>\r\n\r\n            </TreeView>\r\n        </Container>\r\n    );\r\n\r\n}","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\router\\libs\\MainAPIRoute.js",[],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\menu\\action\\MenuReducerAction.js",["124"],"const menu = data => {\r\n    return {\r\n        type: 'MENU'\r\n        , data\r\n    };\r\n};\r\n\r\nexport default { \r\n    menu\r\n};","C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\libs\\reducer\\menu\\reducer\\MenuReducer.js",[],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\views\\user\\MyInfoViewPage.jsx",["125","126"],"C:\\pjt\\bak\\insummnia\\src\\main\\webapp\\WEB-INF\\jsx\\src\\router\\libs\\MenuAPIRoute.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":26},{"ruleId":"131","severity":1,"message":"135","line":1,"column":28,"nodeType":"133","messageId":"134","endLine":1,"endColumn":36},{"ruleId":"131","severity":1,"message":"136","line":2,"column":23,"nodeType":"133","messageId":"134","endLine":2,"endColumn":34},{"ruleId":"131","severity":1,"message":"137","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":14},{"ruleId":"131","severity":1,"message":"138","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":20},{"ruleId":"131","severity":1,"message":"139","line":9,"column":8,"nodeType":"133","messageId":"134","endLine":9,"endColumn":12},{"ruleId":"131","severity":1,"message":"140","line":10,"column":8,"nodeType":"133","messageId":"134","endLine":10,"endColumn":22},{"ruleId":"131","severity":1,"message":"141","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":19},{"ruleId":"131","severity":1,"message":"142","line":12,"column":8,"nodeType":"133","messageId":"134","endLine":12,"endColumn":19},{"ruleId":"131","severity":1,"message":"143","line":13,"column":8,"nodeType":"133","messageId":"134","endLine":13,"endColumn":17},{"ruleId":"131","severity":1,"message":"144","line":14,"column":8,"nodeType":"133","messageId":"134","endLine":14,"endColumn":13},{"ruleId":"131","severity":1,"message":"145","line":15,"column":8,"nodeType":"133","messageId":"134","endLine":15,"endColumn":18},{"ruleId":"131","severity":1,"message":"146","line":19,"column":11,"nodeType":"133","messageId":"134","endLine":19,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":50,"column":8,"nodeType":"149","endLine":50,"endColumn":10,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":113,"column":61,"nodeType":"153","messageId":"154","endLine":113,"endColumn":63},{"ruleId":"131","severity":1,"message":"155","line":30,"column":13,"nodeType":"133","messageId":"134","endLine":30,"endColumn":18},{"ruleId":"131","severity":1,"message":"156","line":30,"column":20,"nodeType":"133","messageId":"134","endLine":30,"endColumn":28},{"ruleId":"131","severity":1,"message":"157","line":2,"column":16,"nodeType":"133","messageId":"134","endLine":2,"endColumn":24},{"ruleId":"131","severity":1,"message":"146","line":27,"column":11,"nodeType":"133","messageId":"134","endLine":27,"endColumn":16},{"ruleId":"147","severity":1,"message":"158","line":43,"column":7,"nodeType":"149","endLine":43,"endColumn":9,"suggestions":"159"},{"ruleId":"131","severity":1,"message":"160","line":9,"column":10,"nodeType":"133","messageId":"134","endLine":9,"endColumn":18},{"ruleId":"131","severity":1,"message":"161","line":1,"column":9,"nodeType":"133","messageId":"134","endLine":1,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":14,"column":103,"nodeType":"164","endLine":14,"endColumn":121},{"ruleId":"165","severity":1,"message":"166","line":20,"column":1,"nodeType":"167","endLine":24,"endColumn":3},{"ruleId":"131","severity":1,"message":"168","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":16},{"ruleId":"165","severity":1,"message":"166","line":8,"column":1,"nodeType":"167","endLine":10,"endColumn":3},{"ruleId":"131","severity":1,"message":"137","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"169","line":41,"column":7,"nodeType":"149","endLine":41,"endColumn":9,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useDispatch' is defined but never used.","'Link' is defined but never used.","'MainAPIRoute' is defined but never used.","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'login' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'login.menu'. Either include it or remove the dependency array.","ArrayExpression",["173"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["174"],"'DataGrid' is defined but never used.","'Button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'TreeItem' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchData' and 'login.loginUser'. Either include them or remove the dependency array.",["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [login.menu]",{"range":"182","text":"183"},"Update the dependencies array to be: [fetchData]",{"range":"184","text":"185"},"Update the dependencies array to be: [fetchData, login.loginUser]",{"range":"186","text":"187"},[1682,1684],"[login.menu]",[1545,1547],"[fetchData]",[1414,1416],"[fetchData, login.loginUser]"]