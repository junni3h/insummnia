<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.insummnia.webpjt.user.impl.UserDAO">

    <insert id="registUserMST" parameterType="user">
      INSERT INTO TB_USER_MST
      (
          USER_ID
        , PASSWORD
        , USER_NM
        , NICK_NM
        , CREATE_USER_ID
        , CREATE_DATETIME
      )
      VALUES
      (
          #{userId}
        , #{password}
        , #{userNm} 
        , #{nickNm}
        , #{createUserId}
        , NOW()
      )
    </insert>

    <insert id="registUserInfo" parameterType="user">
      INSERT INTO TB_USER_INFO
      (
          USER_ID
      )
      VALUES
      (
          #{userId}
      )
    </insert>

    <insert id="registUserAuth" parameterType="user">
      INSERT INTO TB_USER_Auth
      (
          USER_ID
      )
      VALUES
      (
          #{userId}
      )
    </insert>

    <insert id="registUserRole" parameterType="user">
      INSERT INTO TB_USER_ROLE
      (
          USER_ID
        , ROLE_ID
        , CREATE_USER_ID
        , CREATE_DATETIME
      )
      VALUES
      (
          #{userId}
        , 'ROLE_GUEST'
        , #{createUserId}
        , NOW()
      )
    </insert>

    <update id="updateLoginUserInfo" parameterType="user">
      UPDATE TB_USER_AUTH
         SET RECENT_LOGIN_DATETIME = NOW()
       WHERE USER_ID = #{userId}
    </update>

    <update id="updateLogOutUserInfo" parameterType="user">
      UPDATE TB_USER_AUTH
         SET LAST_LOGOUT_DATETIME = NOW()
       WHERE USER_ID = #{userId}
    </update>

    <update id="updateUserMST" parameterType="user">
      UPDATE TB_USER_MST
         SET PASSWORD        = #{password}
           , USER_NM         = #{userNm}
           , NICK_NM         = #{nickNm}
           , UPDATE_USER_ID  = #{userId}
           , UPDATE_DATETIME = NOW()
       WHERE USER_ID = #{userId}
    </update>

    <select id="findUserDuplicationById" parameterType="user" resultType="java.lang.Boolean">
      SELECT EXISTS ( 
        SELECT USER_ID 
          FROM TB_USER_MST
         WHERE USER_ID = #{userId}
      )
    </select>

    <select id="findUserDuplicationByNickName" parameterType="user" resultType="java.lang.Boolean">
      SELECT EXISTS ( 
        SELECT USER_ID 
          FROM TB_USER_MST
         WHERE NICK_NM = #{nickNm}
      )
    </select>

    <select id="selectLoginCheck" parameterType="user" resultType="java.lang.Boolean">
      SELECT EXISTS ( 
        SELECT USER_ID 
          FROM TB_USER_MST
         WHERE USER_ID = #{userId}
           AND PASSWORD = #{password}
      )
    </select>

    <select id="selectUserList" resultType="user">
      SELECT  UM.USER_ID
           ,  IFNULL(UM.USER_NM, '') AS USER_NM
           ,  IFNULL(UM.NICK_NM, '') AS NICK_NM
           ,  RM.ROLE_ID
           ,  RM.ROLE_NM_KR AS ROLE_NM
           ,  DATE_FORMAT(UM.CREATE_DATETIME, '%Y-%m-%d %H:%i:%s') AS CREATE_DATETIME
           ,  IFNULL(UM.UPDATE_USER_ID, '') AS UPDATE_USER_ID
           ,  DATE_FORMAT(UM.UPDATE_DATETIME, '%Y-%m-%d %H:%i:%s') AS UPDATE_DATETIME
        FROM TB_USER_MST UM
       INNER JOIN TB_USER_ROLE UR ON (UR.USER_ID = UM.USER_ID)
       INNER JOIN TB_ROLE_MST RM ON (RM.ROLE_ID = UR.ROLE_ID)
    </select>

    <select id="selectUserInfo" parameterType="java.lang.String" resultType="user">
      SELECT  UM.USER_ID
           ,  IFNULL(USER_NM, '') AS USER_NM
           ,  IFNULL(NICK_NM, '') AS NICK_NM
           ,  UR.ROLE_ID
           ,  RM.ROLE_NM_KR AS ROLE_NM
           ,  IS_USER_ENABLED
           ,  IS_USER_LOCKED
           ,  IS_USER_EXPIRED
           ,  IS_USER_DELETED
           ,  DATE_FORMAT(UA.RECENT_LOGIN_DATETIME, '%Y-%m-%d %H:%i:%s') AS RECENT_LOGIN_DATETIME
           ,  DATE_FORMAT(UA.LAST_LOGOUT_DATETIME, '%Y-%m-%d %H:%i:%s') AS LAST_LOGOUT_DATETIME
           ,  DATE_FORMAT(UM.CREATE_DATETIME, '%Y-%m-%d %H:%i:%s') AS CREATE_DATETIME
           ,  IFNULL(UM.UPDATE_USER_ID, '') AS UPDATE_USER_ID
           ,  DATE_FORMAT(UM.UPDATE_DATETIME, '%Y-%m-%d %H:%i:%s') AS UPDATE_DATETIME
        FROM TB_USER_MST UM
       INNER JOIN TB_USER_INFO UI ON (UI.USER_ID = UM.USER_ID)
       INNER JOIN TB_USER_ROLE UR ON (UR.USER_ID = UM.USER_ID)
       INNER JOIN TB_USER_AUTH UA ON (UA.USER_ID = UM.USER_ID)
       INNER JOIN TB_ROLE_MST RM ON (RM.ROLE_ID = UR.ROLE_ID)
       WHERE UM.USER_ID = #{userId}
         AND UI.IS_USER_DELETED IS FALSE
    </select>

    <select id="findUserByRoleId" parameterType="role" resultType="user">
      SELECT UR.USER_ID
           , CONCAT(UM.USER_NM, ' (', UR.USER_ID, ')') AS USER_NM
      FROM TB_USER_ROLE UR
     INNER JOIN TB_ROLE_MST RM
        ON ( RM.ROLE_ID = UR.ROLE_ID )
     INNER JOIN TB_USER_MST UM
        ON ( UM.USER_ID = UR.USER_ID )
     WHERE UR.ROLE_ID = #{roleId}
  </select>

  <select id="findExceptUserByRoleId" parameterType="role" resultType="user">
    SELECT UR.USER_ID
         , CONCAT(UM.USER_NM, ' (', UR.USER_ID, ')') AS USER_NM
      FROM (
       SELECT USER_ID
         FROM TB_USER_MST
       EXCEPT
       SELECT USER_ID
         FROM TB_USER_ROLE
        WHERE ROLE_ID = #{roleId}
    ) UR
     INNER JOIN TB_USER_MST UM
     ON ( UM.USER_ID = UR.USER_ID )
  </select>

</mapper>